Java always passes arguments by value.
But when passing objects, the value is a copy of the reference (memory address).

1.Why swap() does not work?
	public static void swap(Object o1, Object o2) {
    		Object tmp = o1;
    		o1 = o2;
    		o2 = tmp;

- Because o1 and o2 are only copies of references.
- Does not change the original references

2.Why changeTitle() does work?
	public static void changeTitle(DigitalVideoDisc dvd, String title) {
    		dvd.setTitle(title);
	}
- The copied reference still point to the same object
- Changes the real DVD



Implement:
public class TestPassingParameter {
    public static void main(String[] args) {
        DigitalVideoDisc jungleDVD = new DigitalVideoDisc("Jungle");
        DigitalVideoDisc cinderellaDVD = new DigitalVideoDisc("Cinderella");

        swap(jungleDVD, cinderellaDVD);

        System.out.println("jungle dvd title: " + jungleDVD.getTitle());
        System.out.println("cinderella dvd title: " + cinderellaDVD.getTitle());
    }

    public static void swap(DigitalVideoDisc d1, DigitalVideoDisc d2) {
        String tmp = d1.getTitle();
        d1.setTitle(d2.getTitle());
        d2.setTitle(tmp);
    }
}